datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//*************** USER LEVEL ***************//
model User {
  id                        String                     @id @default(uuid())
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  email                     String                     @unique
  blocked                   Boolean                    @default(false)
  emailVerified             Boolean                    @default(false)
  role                      Role                       @default(USER) // One role 
  profile                   Profile? // One profile (optional)
  IncorrectPasswordAttempts IncorrectPasswordAttempts? // One attempt record (optional)
  token                     Token[] // Many tokens 
}

model Profile {
  username     String
  profileImage String?
  dob          String?
  address      String?
  city         String?
  country      String?
  state        String?
  phoneNo      Int?
  user         User    @relation(fields: [userId], references: [id])
  userId       String

  @@id([userId, username])
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

model IncorrectPasswordAttempts {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  blockedTill DateTime?
  User        User?     @relation(fields: [userId], references: [id]) // One user (optional)
  userId      String?
}

model Token {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now())
  expiredIn     DateTime?
  type          TokenTypes  @default(ACCOUNT_ACTIVATE) // One token type
  user          User?       @relation(fields: [userId], references: [id]) // One user (optional)
  userId        String? 
  transactionId String
}

enum TokenTypes {
  ACCOUNT_ACTIVATE
  RESET_PASSWORD 
}
